<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="60166835-4b40-4dec-a4fd-07662667d8af" name="Changes" comment=":recycle: Refactor `CoinItem` to use `ImageWithFallback` component for improved logo rendering and add fallback support. Introduce reusable `ImageWithFallback` component.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/prisma/CoinItem.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/prisma/CoinItem.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/prisma/coinDetails.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/prisma/coinDetails.tsx" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;G1TS23&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/G1TS23/next-demo.git&quot;,
    &quot;accountId&quot;: &quot;7c2018bf-c933-4839-9bbd-33711949c448&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2xJcSECfDx2MsciEsfrOfTJmo2q" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Cypress.all tests in app.cy.ts (1).executor": "Run",
    "Cypress.all tests in app.cy.ts (2).executor": "Run",
    "Cypress.all tests in app.cy.ts.executor": "Run",
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "memecoins",
    "js.debugger.nextJs.config.created.client": "true",
    "js.debugger.nextJs.config.created.server": "true",
    "last_opened_file_path": "/Users/olivierfalahi/Documents/EFREI/ReactJS/next-demo",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "ts.external.directory.path": "/Users/olivierfalahi/Documents/EFREI/ReactJS/next-demo/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="RunManager" selected="Cypress.all tests in app.cy.ts (2)">
    <configuration name="all tests in app.cy.ts (1)" type="JavaScriptTestRunnerCypress" temporary="true">
      <node-interpreter value="project" />
      <cypress-package value="$PROJECT_DIR$/node_modules/cypress" />
      <working-dir value="$PROJECT_DIR$" />
      <cypress-options value="-q" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/cypress/e2e/app.cy.ts" />
      <test-names>
        <test-name value="Login" />
        <test-name value="should login" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="all tests in app.cy.ts (2)" type="JavaScriptTestRunnerCypress" temporary="true">
      <node-interpreter value="project" />
      <cypress-package value="$PROJECT_DIR$/node_modules/cypress" />
      <working-dir value="$PROJECT_DIR$" />
      <cypress-options value="-q" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/cypress/e2e/app.cy.ts" />
      <test-names>
        <test-name value="memecoin" />
        <test-name value="should create memecoin" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="all tests in app.cy.ts" type="JavaScriptTestRunnerCypress" temporary="true">
      <node-interpreter value="project" />
      <cypress-package value="$PROJECT_DIR$/node_modules/cypress" />
      <working-dir value="$PROJECT_DIR$" />
      <cypress-options value="-q" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/cypress/e2e/app.cy.ts" />
      <test-names>
        <test-name value="State" />
        <test-name value="should redirect to login" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Next.js: debug client-side" type="JavascriptDebugType" uri="http://localhost:3000/">
      <method v="2" />
    </configuration>
    <configuration name="Next.js: server-side" type="js.build_tools.npm">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="dev" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Cypress.all tests in app.cy.ts (2)" />
        <item itemvalue="Cypress.all tests in app.cy.ts (1)" />
        <item itemvalue="Cypress.all tests in app.cy.ts" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-6a121458b545-JavaScript-WS-251.25410.117" />
      </set>
    </attachedChunks>
  </component>
  <component name="SwiftWorkspaceSettings">
    <option name="detectedToolchain" value="true" />
    <option name="toolchainPathValue" value="/Library/Developer/CommandLineTools" />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="60166835-4b40-4dec-a4fd-07662667d8af" name="Changes" comment="" />
      <created>1747659614547</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1747659614547</updated>
      <workItem from="1747659615671" duration="47323000" />
      <workItem from="1747820258171" duration="42129000" />
      <workItem from="1748852008852" duration="1142000" />
    </task>
    <task id="LOCAL-00001" summary=":sparkles: Implement Memecoin feature with CRUD operations&#10;&#10;Added full functionality for Memecoin management, including creation, listing, and deletion. Introduced Prisma for database interactions and integrated middleware for route protection. Enhanced UI with forms and error handling, supporting authentication and user-specific operations.">
      <option name="closed" value="true" />
      <created>1748005637284</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1748005637284</updated>
    </task>
    <task id="LOCAL-00002" summary=":package: Fix package-lock.json duplications for consistent dependency management&#10;&#10;This resolves duplication issues in `package-lock.json`, where several dependencies such as `bcrypt`, `lodash`, and `pretty-bytes` were present multiple times. The changes ensure that the lock file maintains a single entry per dependency, improving clarity and avoiding potential conflicts during package resolution.">
      <option name="closed" value="true" />
      <created>1748849472618</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1748849472618</updated>
    </task>
    <task id="LOCAL-00003" summary="Update IDE configuration and remove outdated comments&#10;&#10;Refreshed `.idea/workspace.xml` with updated configs and removed unnecessary inline comments. The changes improve clarity and streamline the IDE setup for consistent development.">
      <option name="closed" value="true" />
      <created>1748849489711</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1748849489711</updated>
    </task>
    <task id="LOCAL-00004" summary=":recycle: Refactor `CoinItem` to use `ImageWithFallback` component for improved logo rendering and add fallback support. Introduce reusable `ImageWithFallback` component.">
      <option name="closed" value="true" />
      <created>1748857616307</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1748857616307</updated>
    </task>
    <option name="localTasksCounter" value="5" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Add generated Prisma files and IDE configuration to repo&#10;&#10;Generated Prisma client files were added for use in the app. IntelliJ IDEA-specific configuration and ignored files were also included, ensuring proper setup for local development." />
    <MESSAGE value=":sparkles: Implement Memecoin feature with CRUD operations&#10;&#10;Added full functionality for Memecoin management, including creation, listing, and deletion. Introduced Prisma for database interactions and integrated middleware for route protection. Enhanced UI with forms and error handling, supporting authentication and user-specific operations." />
    <MESSAGE value=":package: Fix package-lock.json duplications for consistent dependency management&#10;&#10;This resolves duplication issues in `package-lock.json`, where several dependencies such as `bcrypt`, `lodash`, and `pretty-bytes` were present multiple times. The changes ensure that the lock file maintains a single entry per dependency, improving clarity and avoiding potential conflicts during package resolution." />
    <MESSAGE value="Update IDE configuration and remove outdated comments&#10;&#10;Refreshed `.idea/workspace.xml` with updated configs and removed unnecessary inline comments. The changes improve clarity and streamline the IDE setup for consistent development." />
    <MESSAGE value="Update IDE configuration and streamline workspace settings" />
    <MESSAGE value=":recycle: Refactor `CoinItem` to use `ImageWithFallback` component for improved logo rendering and add fallback support. Introduce reusable `ImageWithFallback` component." />
    <MESSAGE value=":recycle: Refactor `CoinItem` styles and improve `deleteMemecoin` handler.&#10;&#10;Updated styling for better hover, focus, and active states in `CoinItem`. Refactored `deleteMemecoin` to use a `.then()` promise chain. Simplified JSX structure for improved readability and consistency." />
    <option name="LAST_COMMIT_MESSAGE" value=":recycle: Refactor `CoinItem` styles and improve `deleteMemecoin` handler.&#10;&#10;Updated styling for better hover, focus, and active states in `CoinItem`. Refactored `deleteMemecoin` to use a `.then()` promise chain. Simplified JSX structure for improved readability and consistency." />
  </component>
</project>